steps:
  # Clone the repository and configure credentials
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y git unzip
        git config --global init.defaultBranch main
        git branch -m main
        gcloud config set project protech-new-435412
        echo "$(gcloud secrets versions access latest --secret="GITHUB_TOKEN")" | gh auth login --with-token
        echo "${{ secrets.CREDENTIALS_JSON }}" | base64 -d > /workspace/tool/credentials.json 
        gcloud auth activate-service-account --key-file=/workspace/tool/credentials.json
        gsutil cp gs://protech_bucket/nupack-4.0.1.12.zip /workspace/nupack-4.0.1.12.zip 
        unzip /workspace/nupack-4.0.1.12.zip -d /workspace
        rm /workspace/nupack-4.0.1.12.zip

  # Install Miniconda and NUPACK
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y wget g++
        cd /workspace
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        /bin/bash /workspace/Miniconda3-latest-Linux-x86_64.sh -b -p /workspace/miniconda3
        /workspace/miniconda3/bin/conda update -c defaults conda
        rm Miniconda3-latest-Linux-x86_64.sh
        /workspace/miniconda3/bin/conda create -n myenv python=3.9 -y
        source /workspace/miniconda3/bin/activate myenv
        /workspace/miniconda3/bin/conda config --add channels defaults
        /workspace/miniconda3/bin/conda config --add channels bioconda
        /workspace/miniconda3/bin/conda config --add channels conda-forge
        /workspace/miniconda3/bin/conda config --set channel_priority strict
        /workspace/miniconda3/bin/conda install bioconda numpy scipy pip matplotlib pandas jupyterlab        
        /workspace/miniconda3/bin/conda install viennarna
        /workspace/miniconda3/bin/pip install -U nupack -f /workspace/nupack-4.0.1.12/package
        /workspace/miniconda3/bin/pip install gunicorn biopython flask wtforms flask_wtf werkzeug google-cloud-storage tqdm numpy scipy pip matplotlib pandas jupyterlab viennaRNA joblib google-cloud-storage Bio fuzzysearch
 

  # Build the container image
  - name: gcr.io/cloud-builders/docker
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker build -t gcr.io/protech-new-435412/software --file Dockerfile .

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/protech-new-435412/software']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', 'software', '--image', 'gcr.io/protech-new-435412/software', '--region', 'us-central1']
    
images:
  - gcr.io/protech-new-435412/software
  
options:
  logging: CLOUD_LOGGING_ONLY  
