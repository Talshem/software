%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Wed Oct  2 16:56:12 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/cutpoint 23 def
/sequence { (\
GAUUAAAGCCAGCCAUCUCCAGU GCUGGGGAUGGUUGGCUUUAAUCGAAACAAACAGAGAUUAAAGCCGACCAGACCAAAAUGGUGAGCAAGGGCGAGGAGGACAACAUGGCCAUCAUCAAGGAGUUCAUGCG\
) } def
/len { sequence length } bind def

/coor [
[92.41661835 109.68538666]
[78.93470764 116.26095581]
[65.45279694 122.83652496]
[51.97088242 129.41209412]
[38.48897171 135.98765564]
[25.00706291 142.56321716]
[11.52515125 149.13879395]
[-1.95675921 155.71435547]
[-15.43867016 162.28991699]
[-28.92057991 168.86549377]
[-42.40249252 175.44105530]
[-55.88440323 182.01663208]
[-69.36631012 188.59219360]
[-82.84822083 195.16775513]
[-96.33013153 201.74333191]
[-109.81204224 208.31889343]
[-123.29395294 214.89445496]
[-136.77586365 221.47003174]
[-150.25778198 228.04559326]
[-163.73968506 234.62117004]
[-177.22160339 241.19673157]
[-190.70350647 247.77229309]
[-202.28909302 260.15011597]
[-217.39039612 252.44384766]
[-214.16574097 235.79939270]
[-197.27908325 234.29039001]
[-183.79716492 227.71481323]
[-170.31526184 221.13925171]
[-156.83334351 214.56369019]
[-143.35144043 207.98811340]
[-129.86952209 201.41255188]
[-116.38761139 194.83699036]
[-102.90570068 188.26141357]
[-89.42378998 181.68585205]
[-75.94187927 175.11027527]
[-62.45996857 168.53471375]
[-48.97805786 161.95915222]
[-35.49614716 155.38357544]
[-22.01423645 148.80801392]
[-8.53232670 142.23245239]
[4.94958448 135.65687561]
[18.43149567 129.08131409]
[31.91340637 122.50574493]
[45.39531708 115.93017578]
[58.87722778 109.35461426]
[72.35913849 102.77904510]
[85.84104919 96.20347595]
[71.96817017 101.90814972]
[57.04012680 103.37562561]
[42.32196808 100.48153687]
[29.06096077 93.47113800]
[18.38088799 82.93852234]
[11.18681908 69.77625275]
[8.08840275 55.09974289]
[9.34821033 40.15274048]
[14.85948086 26.20190239]
[24.15517044 14.42947102]
[36.44752884 5.83308172]
[50.69486237 1.14122391]
[65.68979645 0.75150126]
[80.16161346 4.69694042]
[92.88392639 12.64319134]
[102.77858734 23.91686058]
[109.00710297 37.56258011]
[111.04163361 52.42396164]
[108.70977783 67.24160004]
[102.20695496 80.76303864]
[109.55529785 67.68627167]
[105.51160431 52.64345932]
[113.15015411 39.48643875]
[127.51609802 35.72409439]
[134.86444092 22.64732742]
[142.21278381 9.57056141]
[149.56114197 -3.50620484]
[142.96313477 -17.55063248]
[145.91339111 -32.78465652]
[157.27749634 -43.35048676]
[172.68571472 -45.18534470]
[186.21325684 -37.58369064]
[192.65852356 -23.46851349]
[189.54316711 -8.26738834]
[178.06510925 2.17454123]
[162.63790894 3.84214091]
[155.28955078 16.91890717]
[147.94120789 29.99567413]
[140.59286499 43.07244110]
[144.84976196 57.29968262]
[137.58377075 70.66606140]
[122.63206482 75.03462219]
[115.28372192 88.11138153]
[127.92742157 80.04064178]
[141.82949829 85.67376709]
[145.28877258 100.26942444]
[135.39361572 111.54266357]
[120.47257996 110.00489807]
[132.90814209 118.39279175]
[145.34370422 126.78068542]
[161.11120605 128.08312988]
[167.33595276 141.61463928]
[179.77151489 150.00253296]
[192.20707703 158.39042664]
[204.48765564 149.53532410]
[219.02957153 145.42379761]
[234.07246399 146.53352356]
[247.80218506 152.71130371]
[258.56954956 163.19392395]
[265.08847046 176.70237732]
[266.58953857 191.59786987]
[262.91079712 206.08068848]
[275.34637451 214.46858215]
[287.78195190 222.85647583]
[303.74121094 221.21910095]
[314.86846924 232.77607727]
[312.62783813 248.66188049]
[298.73812866 256.69030762]
[283.85433960 250.70260620]
[279.39404297 235.29205322]
[266.95849609 226.90415955]
[254.52291870 218.51626587]
[242.47276306 227.35249329]
[228.09957886 231.54066467]
[213.13273621 230.55677795]
[199.37989807 224.50030518]
[188.50871277 214.08457947]
[181.84461975 200.55274963]
[180.20925903 185.52952576]
[183.81918335 170.82598877]
[171.38362122 162.43809509]
[158.94805908 154.05020142]
[144.07003784 153.34771729]
[136.95581055 139.21624756]
[124.52024841 130.82835388]
[112.08468628 122.44046021]
[102.27145386 120.96934509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[67 90]
[68 89]
[71 86]
[72 85]
[73 84]
[74 83]
[95 133]
[96 132]
[97 131]
[99 129]
[100 128]
[101 127]
[109 119]
[110 118]
[111 117]
] def

init

% Start Annotations
1 23 9  0 0.9 0.2 omark
25 134 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
